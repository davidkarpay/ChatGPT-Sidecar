[tool:pytest]
# Pytest configuration for Sidecar chat testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml

# Minimum coverage percentage
cov-fail-under = 80

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests  
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    edge_case: marks tests as edge case tests
    model: marks tests that require model loading
    api: marks tests that test API endpoints
    search: marks tests for search functionality
    conversation: marks tests for conversation management
    gptj_validation: marks tests for GPT-J download and validation
    download: marks tests that require model downloads
    environment: marks tests for environment validation

# Filtering options
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:transformers.*
    ignore::FutureWarning:torch.*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 300

# Parallel execution
# Uncomment to enable parallel testing with pytest-xdist
# -n auto

# Test collection
collect_ignore = 
    setup.py
    scripts/
    static/
    data/
    .venv/
    htmlcov/